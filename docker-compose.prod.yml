services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.prod
    container_name: pbpis_prod
    restart: always
    working_dir: /var/www
    volumes:
      # Only mount storage and .env - no source code mounting
      - ./storage:/var/www/storage
      - ./.env:/var/www/.env:ro
    networks:
      - pbpis_network
      - shared_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    container_name: pbpis_mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-pbpis_prod}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME:-pbpis_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pbpis_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: pbpis_redis
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pbpis_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  pbpis_network:
    driver: bridge
  shared_network:
    name: naudotojas_shared_network
    external: true

volumes:
  mysql_data:
    driver: local
    name: pbpis_prod_mysql_data
  redis_data:
    driver: local
    name: pbpis_prod_redis_data
