services:
  pbpis:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: pbpis-prod
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    env_file:
      - .env.production
    volumes:
      - storage_data:/var/www/storage
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - pbpis-network
      - shared_network

  mysql:
    image: mysql:9.0
    container_name: pbpis-mysql-prod
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"  # Different port to avoid conflicts
    networks:
      - pbpis-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

volumes:
  mysql_data:
  storage_data:

networks:
  pbpis-network:
    driver: bridge
  shared_network:
    external: true
